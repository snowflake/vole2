#!/bin/sh

# Generate a plist containing info about Vole for the 
#   Check-For-Updates facility.

PATH=../scripts:${PATH}:/opt/local/bin

set -e
filename=VoleInfo.plist

echo vscript-xml.sh started
echo Filename is ${filename}

. ../scripts/common-functions.sh

function interesting_environments(){
   printenv | sort |awk -f ../scripts/interesting_environments.awk
}


function archs_array(){
    # Generate a array of Archs
    printf "  <key>Archs</key>\n"
    printf "    <array>\n"
    for i in "${ARCHS}"
    do
	printf "      <string>%s</string>\n" ${i}
    done
    printf "    </array>\n"
}

VCSSTATUS=$(../scripts/version-script.sh vcs)
VCSDATE=$(../scripts/version-script.sh vcsdate)

function iso_date(){
# print date in ISO 8601 format (see plist dtd for acceptable format)
date -u -r ${SECONDS_SINCE_EPOCH} +%Y-%m-%dT%H:%M:%SZ
}
############ end of functions ##############
SECONDS_SINCE_EPOCH=$(date -u +%s)
# SHORTDATE is used for Bundle long version numbers
SHORTDATE=$(date -r ${SECONDS_SINCE_EPOCH} -u '+%Y%m.%d.%H%M%S')
builddate=$(date -u -r "${SECONDS_SINCE_EPOCH}")
BUILDID="${SHORTDATE}"
cat >${filename} <<EOF1
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<!-- This file is automatically generated by vscript-xml.sh.
     Do not edit. Do not check into Fossil or Git.
     This file is placed in the Resources folder of the App -->
<!-- ** This file cannot be edited by Xcode's Property List editor,
     ** it does not like the <date> element, and generally gets confused -->
<dict>
  <key>ProductName</key>
    <string>${PRODUCT_NAME}</string>
  <key>Version</key>
    <string>$(marketing_version | nolf)</string>
  <key>VoleBuildStyle</key>
    <string>${VOLE_BUILD_STYLE}</string>
  <key>MaxOSXVersion</key>
    <string>Not Implemented yet</string>
  <key>BuildDate</key>
    <string>${builddate}</string>
  <key>BuildDateISO</key>
    <date>$(iso_date | nolf)</date>
  <key>BuildDateSinceEpoch</key>
    <integer>${SECONDS_SINCE_EPOCH}</integer>
  <key>BuildUUID</key>
    <string>$(uuidgen | nolf)</string>
  <key>BuildID</key>
    <string>${BUILDID}</string>
  <key>Configuration</key>
    <string>${CONFIGURATION}</string>
  <key>ProjectFilePath</key>
    <string>${PROJECT_FILE_PATH}</string>
  <key>DeploymentTarget</key>
    <string>${MACOSX_DEPLOYMENT_TARGET}</string>
  <key>SDKName</key>
    <string>${SDK_NAME}</string>
  <key>SDKProductBuildVersion</key>
    <string>${SDK_PRODUCT_BUILD_VERSION}</string>
  <key>GCCPreprocessorDefinitions</key>
    <string>${GCCPREP}</string>
  <key>WarningCFlags</key>
    <string>${WARNING_CF}</string>
  <key>VCSStatus</key>
    <string>${VCSSTATUS}</string>
  <key>VCSDate</key>
    <string>${VCSDATE}</string>
  <key>VCSUncheckedFiles</key>
    <integer>$(printf "%d" ${unchecked_files})</integer>
  <key>VCSCheckin</key>
    <string>$(uuid_checkin | nolf)</string>   
$(archs_array)
   <key>BuildMachineHostname</key>
     <string>$(hostname)</string>
   <key>BuildMachineUserName</key>
     <string>$(whoami)</string>
   <key>BuildMachineOSXVersion</key>
     <string>$(sw_vers -productVersion)</string>
   <key>BuildMachineOSXBuildVersion</key>
     <string>$(sw_vers -buildVersion)</string>
   <key>BuildMachineXcodeVersion</key>
     <string>${XCODE_VERSION_ACTUAL} ${XCODE_PRODUCT_BUILD_VERSION}</string>
<!-- UUID Placeholder -->
$(interesting_environments)
</dict>
</plist>
EOF1

exit 0
